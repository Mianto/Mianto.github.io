<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Projects on Siddhant Shaw</title><link>https://mianto.github.io/projects/</link><description>Recent content in Projects on Siddhant Shaw</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Siddhant Shaw |</copyright><lastBuildDate>Fri, 17 Mar 2023 13:04:27 +0530</lastBuildDate><atom:link href="https://mianto.github.io/projects/index.xml" rel="self" type="application/rss+xml"/><item><title>Restaurant Manager</title><link>https://mianto.github.io/projects/restaurant-manager/</link><pubDate>Fri, 17 Mar 2023 13:04:27 +0530</pubDate><guid>https://mianto.github.io/projects/restaurant-manager/</guid><description>Restaurant Manager is a full-stack application using Spring-Boot and React, with features for both customers (scanning QR code, selecting menu items, submitting orders) and admins (viewing/creating orders). Implemented Spring Security 5 for authentication, used MySQL with Hibernate, and added private/non-private routes with react-router. The application offers both customer and admin journeys, which are detailed below.
Customer Journey Customer will be able to scan QR code and go to webpage Customer will be able to choose items from Menu.</description></item><item><title>Iterator Pattern in trees</title><link>https://mianto.github.io/projects/iterator-pattern-in-tree/</link><pubDate>Mon, 01 Aug 2022 00:00:00 +0000</pubDate><guid>https://mianto.github.io/projects/iterator-pattern-in-tree/</guid><description>Implementing the iterator pattern in Java</description></item><item><title>Glasses</title><link>https://mianto.github.io/projects/glasses/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mianto.github.io/projects/glasses/</guid><description>A web application to detect whether the user is wearing glasses or not. In this project, I have used resnet50 model and fine-tuned the model on the dataset made from scarping google-images. I have also used saliency map to visualize the prediction of the model.
Project is open for feedback and contribution at Github</description></item></channel></rss>